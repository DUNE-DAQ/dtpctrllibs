
/**
 * @file DTPWrapper.cpp 
 *
 * This is part of the DUNE DAQ , copyright 2020.
 * Licensing/copyright details are in the COPYING file that you should have
 * received with this code.
 */
// From Module
#include "DTPWrapper.hpp"

#include "logging/Logging.hpp"

// From STD
#include <chrono>
#include <memory>
#include <string>

/**
 * @brief TRACE debug levels used in this source file
 */
enum
  {
    TLVL_ENTER_EXIT_METHODS = 5,
    TLVL_WORK_STEPS = 10,
    TLVL_BOOKKEEPING = 15
  };

namespace dunedaq {
  namespace dtplibs {

    DTPWrapper::DTPWrapper(const std::string& device) {
      
      std::string conn_file = dtpcontrols::find_connection_file();
      
      uhal::ConnectionManager cm(conn_file, {"ipbusflx-2.0"});
      uhal::HwInterface flx = cm.getDevice(device);
      
      m_dtp_pod_node = dynamic_cast<const DTPPodNode*>( &flx.getNode(std::string("")) );
      
    }


  }
}
